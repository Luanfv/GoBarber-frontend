{"ast":null,"code":"var _jsxFileName = \"/home/luanfv/projetos/GoBarber-frontend/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef } from 'react';\nimport { Container } from './style';\nimport { useField } from '@unform/core';\n\nconst Input = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    defaultValue,\n    error,\n    registerField\n  } = useField(name);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/luanfv/projetos/GoBarber-frontend/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","Container","useField","Input","name","icon","Icon","rest","inputRef","fieldName","defaultValue","error","registerField","ref","current","path"],"mappings":";AAAA,OAAOA,KAAP,IAAqCC,SAArC,EAAgDC,MAAhD,QAA8D,OAA9D;AAEA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAEC,IAAd;AAAoB,KAAGC;AAAvB,CAAD,KAAmC;AACnE,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAES,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDV,QAAQ,CAACE,IAAD,CAAlE;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACZa,IAAAA,aAAa,CAAC;AACVR,MAAAA,IAAI,EAAEK,SADI;AAEVI,MAAAA,GAAG,EAAEL,QAAQ,CAACM,OAFJ;AAGVC,MAAAA,IAAI,EAAE;AAHI,KAAD,CAAb;AAKH,GANQ,EAMN,CAACN,SAAD,EAAYG,aAAZ,CANM,CAAT;AAQA,sBACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMN,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,eAEI,+CAAYC,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADJ;AAMH,CAlBD;;AAoBA,eAAeJ,KAAf","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { Container } from './style';\nimport { useField } from '@unform/core';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    name: string;\n    icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n    const inputRef = useRef(null);\n    const { fieldName, defaultValue, error, registerField } = useField(name);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'value'\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container>\n            { Icon && <Icon size={20} /> }\n            <input { ...rest } />\n        </Container>\n    );\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}