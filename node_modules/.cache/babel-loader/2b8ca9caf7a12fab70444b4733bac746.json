{"ast":null,"code":"var _jsxFileName = \"/home/luanfv/projetos/GoBarber-frontend/src/components/Input/index.tsx\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Container } from './style';\nimport { useField } from '@unform/core';\n\nconst Input = ({\n  name,\n  icon: Icon,\n  ...rest\n}) => {\n  const inputRef = useRef(null);\n  const {\n    fieldName,\n    defaultValue,\n    error,\n    registerField\n  } = useField(name);\n  const [isFocused, setIsFocused] = useState(false);\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value'\n    });\n  }, [fieldName, registerField]);\n  return /*#__PURE__*/React.createElement(Container, {\n    isFocused: isFocused,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, Icon && /*#__PURE__*/React.createElement(Icon, {\n    size: 20,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    onFocus: () => setIsFocused(true),\n    onBlur: () => setIsFocused(false),\n    ref: inputRef,\n    defaultValue: defaultValue\n  }, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport default Input;","map":{"version":3,"sources":["/home/luanfv/projetos/GoBarber-frontend/src/components/Input/index.tsx"],"names":["React","useEffect","useRef","useState","Container","useField","Input","name","icon","Icon","rest","inputRef","fieldName","defaultValue","error","registerField","isFocused","setIsFocused","ref","current","path"],"mappings":";AAAA,OAAOA,KAAP,IAAqCC,SAArC,EAAgDC,MAAhD,EAAwDC,QAAxD,QAAwE,OAAxE;AAEA,SAASC,SAAT,QAA0B,SAA1B;AACA,SAASC,QAAT,QAAyB,cAAzB;;AAOA,MAAMC,KAA2B,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAI,EAAEC,IAAd;AAAoB,KAAGC;AAAvB,CAAD,KAAmC;AACnE,QAAMC,QAAQ,GAAGT,MAAM,CAAC,IAAD,CAAvB;AACA,QAAM;AAAEU,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,KAA3B;AAAkCC,IAAAA;AAAlC,MAAoDV,QAAQ,CAACE,IAAD,CAAlE;AACA,QAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACZc,IAAAA,aAAa,CAAC;AACVR,MAAAA,IAAI,EAAEK,SADI;AAEVM,MAAAA,GAAG,EAAEP,QAAQ,CAACQ,OAFJ;AAGVC,MAAAA,IAAI,EAAE;AAHI,KAAD,CAAb;AAKH,GANQ,EAMN,CAACR,SAAD,EAAYG,aAAZ,CANM,CAAT;AAQA,sBACI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACMP,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,IAAI,EAAE,EAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADd,eAEI;AACI,IAAA,OAAO,EAAE,MAAMQ,YAAY,CAAC,IAAD,CAD/B;AAEI,IAAA,MAAM,EAAE,MAAMA,YAAY,CAAC,KAAD,CAF9B;AAGI,IAAA,GAAG,EAAEN,QAHT;AAII,IAAA,YAAY,EAAEE;AAJlB,KAKSH,IALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAFJ,CADJ;AAYH,CAzBD;;AA2BA,eAAeJ,KAAf","sourcesContent":["import React, { InputHTMLAttributes, useEffect, useRef, useState } from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { Container } from './style';\nimport { useField } from '@unform/core';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n    name: string;\n    icon: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n    const inputRef = useRef(null);\n    const { fieldName, defaultValue, error, registerField } = useField(name);\n    const [isFocused, setIsFocused] = useState(false);\n\n    useEffect(() => {\n        registerField({\n            name: fieldName,\n            ref: inputRef.current,\n            path: 'value',\n        });\n    }, [fieldName, registerField]);\n\n    return (\n        <Container isFocused={isFocused}>\n            { Icon && <Icon size={20} /> }\n            <input \n                onFocus={() => setIsFocused(true)}\n                onBlur={() => setIsFocused(false)}\n                ref={inputRef} \n                defaultValue={defaultValue} \n                { ...rest } \n            />\n        </Container>\n    );\n}\n\nexport default Input;"]},"metadata":{},"sourceType":"module"}